package com.honeywell.iaq;import android.app.Activity;import android.graphics.Rect;import android.os.Build;import android.util.DisplayMetrics;import android.view.Display;import android.view.View;import android.view.ViewTreeObserver;import android.view.WindowManager;import android.widget.FrameLayout;/** * Created by h127856 on 16/8/30. */public class AndroidBug5497Workaround {    // For more information, see https://code.google.com/p/android/issues/detail?id=5497    public static void assistActivity(final Activity activity) {        new AndroidBug5497Workaround(activity);    }    private View mChildOfContent;    private int usableHeightPrevious;    private FrameLayout.LayoutParams frameLayoutParams;    private AndroidBug5497Workaround(final Activity activity) {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            FrameLayout content = (FrameLayout) activity.findViewById(android.R.id.content);            mChildOfContent = content.getChildAt(0);            mChildOfContent.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {                public void onGlobalLayout() {                    possiblyResizeChildOfContent(activity);                }            });            frameLayoutParams = (FrameLayout.LayoutParams) mChildOfContent.getLayoutParams();        }    }// To use this class, simply invoke assistActivity() on an Activity that already has its content view set.    private void possiblyResizeChildOfContent(Activity activity) {        int usableHeightNow = computeUsableHeight();        if (usableHeightNow != usableHeightPrevious) {            int resourceId = activity.getResources().getIdentifier("navigation_bar_height", "dimen", "android");            //Get NavigationBar height            int navigateHeight = activity.getResources().getDimensionPixelSize(resourceId);            boolean hasSoftNavigateBar = navigationBarExist2(activity);            int usableHeightSansKeyboard = mChildOfContent.getRootView().getHeight();            int heightDifference = usableHeightSansKeyboard - usableHeightNow;            if (heightDifference > (usableHeightSansKeyboard / 4) || hasSoftNavigateBar) {                if (heightDifference == 0) {                    heightDifference = navigateHeight;                }                // keyboard probably just became visible                frameLayoutParams.height = usableHeightSansKeyboard - heightDifference;            } else {                // keyboard probably just became hidden                frameLayoutParams.height = usableHeightSansKeyboard;            }            mChildOfContent.requestLayout();            usableHeightPrevious = usableHeightNow;        }    }    private int computeUsableHeight() {        Rect r = new Rect();        mChildOfContent.getWindowVisibleDisplayFrame(r);        return r.bottom;    }    /**     * @param activity     * @return     */    public static boolean navigationBarExist2(Activity activity) {        WindowManager windowManager = activity.getWindowManager();        Display d = windowManager.getDefaultDisplay();        DisplayMetrics realDisplayMetrics = new DisplayMetrics();        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {            d.getRealMetrics(realDisplayMetrics);        }        int realHeight = realDisplayMetrics.heightPixels;        int realWidth = realDisplayMetrics.widthPixels;        DisplayMetrics displayMetrics = new DisplayMetrics();        d.getMetrics(displayMetrics);        int displayHeight = displayMetrics.heightPixels;        int displayWidth = displayMetrics.widthPixels;        return (realWidth - displayWidth) > 0 || (realHeight - displayHeight) > 0;    }}